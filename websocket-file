// server.js
//npm install ws express multer

const express = require('express');
const multer = require('multer');
const path = require('path');
const fs = require('fs');
const WebSocket = require('ws');

const app = express();
const PORT = 3001;
const wss = new WebSocket.Server({ noServer: true });

// Configure multer storage
const storage = multer.diskStorage({
    destination: function (req, file, cb) {
        const folderName = 'uploaded_files';
        const dir = path.join(__dirname, folderName);

        if (!fs.existsSync(dir)) {
            fs.mkdirSync(dir);
        }

        cb(null, dir);
    },
    filename: function (req, file, cb) {
        cb(null, file.originalname);
    }
});
const upload = multer({ storage: storage });

// WebSocket connection handler
wss.on('connection', ws => {
    console.log('Client connected');

    ws.on('message', message => {
        console.log('Received message:', message);
    });

    ws.on('close', () => {
        console.log('Client disconnected');
    });
});

// Express setup
app.use(express.json());

app.post('/upload', upload.array('files'), (req, res) => {
    const folderName = 'uploaded_files';
    const files = req.files.map(file => ({
        name: file.originalname,
        folderName,
    }));
    res.json(files);
});

const server = app.listen(PORT, () => {
    console.log(`HTTP server running on port ${PORT}`);
});

server.on('upgrade', (request, socket, head) => {
    wss.handleUpgrade(request, socket, head, ws => {
        wss.emit('connection', ws, request);
    });
});
